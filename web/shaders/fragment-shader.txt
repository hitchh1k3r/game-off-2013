precision mediump float;
precision mediump int;

uniform mat4 uMMatrix;
uniform mat4 uPMatrix;
uniform mat4 uVMatrix;
uniform sampler2D uSpriteSampler;
uniform sampler2D uDiffuseSampler;
uniform sampler2D uEmissiveSampler;
uniform int uRender3D;
uniform int uUseTexture;
uniform float uRed;
uniform float uGreen;
uniform float uBlue;

varying vec4 vWorldSpaceNormal;
varying vec2 vVertexTextureCoord;

void main()
{ // light direction: one back, two left, three up :: norm(-2, -1, +3)
	if(uRender3D == 1)
	{
		float light = max(dot(vec3(-0.53452248382, -0.26726124191, 0.80178372573), vWorldSpaceNormal.xyz), 0.2);
		if(uUseTexture == 1)
		{
			vec4 color = texture2D(uDiffuseSampler, vVertexTextureCoord);
			vec4 emissive = texture2D(uEmissiveSampler, vVertexTextureCoord);
			gl_FragColor = vec4(max(color.rgb * light, emissive.rgb), 1);
		}
		else
		{
			gl_FragColor = vec4(vec3(uRed, uGreen, uBlue) * light, 1);
		}
	}
	else
	{
		if(uUseTexture == 1)
		{
			gl_FragColor = texture2D(uSpriteSampler, vVertexTextureCoord);
		}
		else
		{
			gl_FragColor = vec4(uRed, uGreen, uBlue, 1);
		}
	}
}